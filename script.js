const gridContainer = document.querySelector('#grid-container'); // <- Main Div
const colorPicker = document.getElementById('colorPicker');
const slider = document.getElementById('myRange');
const output = document.getElementById('slider-container');

const pixel = document.getElementById('pixel');
const eraser = document.getElementById('eraser');

let isDrawing = false; // <- To handle the "mouseover" event listener
let isErasing = false; // <- To handle eraser

output.innerHTML = '16';

// Logic for generating a single row
function gridRowGenerator() {
  const rowContainer = document.createElement('div');
  rowContainer.id = 'row-container';
  gridContainer.appendChild(rowContainer);

  for (let i = 0; i < output.innerHTML; i++) {
    const gridSquare = document.createElement('div');
    gridSquare.id = 'square';
    if (output.innerHTML === '16') {
      gridSquare.style.width = '30px';
      gridSquare.style.height = '30px';
    } else if (output.innerHTML === '24') {
      gridSquare.style.width = '20px';
      gridSquare.style.height = '19.55px';
    } else if (output.innerHTML === '32') {
      gridSquare.style.width = '15px';
      gridSquare.style.height = '14.5px';
    } else {
      gridSquare.style.width = '7.5px';
      gridSquare.style.height = '7.15px';
    }
    rowContainer.appendChild(gridSquare);
  }
}

// Joining all rows together to form a grid
function gridGenerator(columns) {
  document.getElementById('grid-container').innerHTML = ""; // Clear previous boards
  columns = output.innerHTML;
  for (let i = 0; i < columns - 1; i++) {
    gridRowGenerator();
    eventListeners();
  }
}

gridGenerator();

slider.oninput = () => {
  if (slider.value === '1') {
    output.innerHTML = '16';
    gridGenerator();
  } else if (slider.value === '2') {
    output.innerHTML = '24';
    gridGenerator();

  } else if (slider.value === '3') {
    output.innerHTML = '32';
    gridGenerator();
  } else {
    output.innerHTML = '64';
    gridGenerator();
  }
  return output.innerHTML;
};

// Event listeners
function eventListeners() {
  let squares = document.querySelectorAll('#row-container'); // <- Selecting row-container after it was generated by gridRowGenerator()

  squares.forEach((square) => {
    square.addEventListener('mousedown', (event) => {
      isDrawing = true;
      if (isErasing === true) {
        event.target.style.backgroundColor = 'blanchedalmond';
      } else {
        event.target.style.backgroundColor = colorPicker.value;
      }
    });
  });

  squares.forEach((square) => {
    square.addEventListener('mouseover', (event) => {
      if (isDrawing === true) {
        if (isErasing === true) {
          event.target.style.backgroundColor = 'blanchedalmond';
        } else {
          event.target.style.backgroundColor = colorPicker.value;
        }
      }
    });
  });

  window.addEventListener('mouseup', () => {
    isDrawing = false;
  });
}

pixel.addEventListener('click', () => {
  isErasing = false;
});

eraser.addEventListener('click', () => {
  isErasing = true;
});